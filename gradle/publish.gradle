apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

apply from: project.rootProject.file('gradle/maven.gradle')
apply from: project.rootProject.file('gradle/maven-central.gradle')

task stubJavadoc(type: Jar) {
    archiveClassifier = 'javadoc'
}


task listConfigs(){
    configurations.forEach{
        println(it)
    }
}
//publishing {
//    publications {
//        aar(MavenPublication) {
//            groupId = project.group
//            artifactId "${project.name}-android"
//            version = project.version
//            artifact("$buildDir/outputs/aar/commons-logger-release.aar")
//            pom.withXml {
//                def dependenciesNode = asNode().appendNode('dependencies')
//                generatePomDeps(configurations.androidMainApi,dependenciesNode)
//                generatePomDeps(configurations.androidMainImplementation,dependenciesNode)
//            }
//        }
//    }
//    publications.all {
//        pom.withXml(configureMavenCentralMetadata)
//    }
//    afterEvaluate {
//        kotlin.targets.forEach { target ->
//            def targetPublication = publications.findByName(target.name)
//            if (targetPublication != null) {
//                targetPublication.artifact stubJavadoc
//            }
//        }
//    }
//}


bintray {
    user = BINTRAY_USER
    key = BINTRAY_KEY

    print("USER BINTRAY $BINTRAY_USER" )
    override = true // for multi-platform Kotlin/Native publishing
    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        userOrg = bringrayOrg
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        dryRun = false
        override = true
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
        }
    }
}


// TODO :kludge this is required for K/N publishing
bintrayUpload.dependsOn publishToMavenLocal

// This is for easier debugging of bintray uploading problems
bintrayUpload.doFirst {
    publications = project.publishing.publications.findAll { !it.name.contains('-test') }.collect {
        println("Uploading artifact '$it.groupId:$it.artifactId:$it.version' from publication '$it.name'")
        it.name
    }
}